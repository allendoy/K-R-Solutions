#include <stdio.h>

#define MAX_LEN 256

void squeeze(char s[], char c);
void squeeze2(char s[], char t[]);
void squeeze3(char s[], char t[]);
void strcat(char s[], char t[]);
void strcat2(char s[], char t[]);
int any(char s[], char t[]);
int strstr(char s[], char t[]);
int main(int argc, char** argv)
{
  char s[MAX_LEN] = "341212334";
  char t[] = "24";
  int index;
  
  index = strstr(s, t);
  index = any(s, t);
  //squeeze2(s, t);
  squeeze3(s, t);
  strcat(s, t);
  strcat2(s, t);
  printf(s);

  return 0;
}

void squeeze(char s[], char c)
{
  int i, j;
  for (i = j = 0; s[i] != '\0'; i++)
  {
    if (s[i] != c)
    {
      s[j++] = s[i]; // Only if s[i] not equal to char c, j adds by 1.
    }
  }
  s[j] = '\0';
}

void squeeze2(char s[], char t[])
{
  int i, j, k;

  for (i = j = 0; s[i] != '\0'; i++)
  {
    for (k = 0; t[k] != '\0'; k++)
    {
      if (s[i] == t[k])
      {
        break;
      }
    }
    if (t[k] == '\0')
    {
      s[j++] = s[i];
    }
  }
  s[j] = '\0';
}

void squeeze3(char s[], char t[])
{
  int i, j, k;

  for (i = j = 0; s[i] != '\0'; i++)
  {
    for (k = 0; t[k] != '\0' && s[i] != t[k]; k++)
      ;
    if (t[k] == '\0') // if s[i] not match any character in array of t, t[k] == '\0'
    {
      s[j++] = s[i];
    }
  }
  s[j] = '\0';
}

int strstr(char s[], char t[])
{
  int i, j, k;

  for (i = 0; s[i] != '\0'; i++)
  {
    for (k = i, j = 0; t[j] != '\0' && s[k] == t[j]; k++, j++)
      ;
    if (t[j] == '\0')
    {
      return i;
    }
  }
  return -1;
}

int any(char s[], char t[])
{
  int i, j;

  for (i = 0; s[i] != '\0'; i++)
  {
    for (j = 0; t[j] != '\0'; j++)
    {
      if (s[i] == t[j])
      {
        return i;
      }
    }
  }
  return -1;
}

void strcat(char s[], char t[])
{
  int i, j;

  for (i = 0; s[i] != '\0'; i++)
    ;
  for (j = 0; t[j] != '\0'; j++)
  {
    s[i++] = t[j]; // if you put i++ in the if-expr3, the s[i] = '\0'; should be changed to s[++i] = '\0';
  }
  s[i] = '\0';
}

void strcat2(char s[], char t[])
{
  int i, j;

  i = j = 0;
  while (s[i] != '\0')
  {
    ++i;
  }
  while (s[i++] = t[j++])
    ;
  s[i] = '\0';
}
